<?xml version="1.0" encoding="utf-8"?>
<Project>
  <UsingTask TaskName="CollectDeclaredReferencesTask" AssemblyFile="$(ReferenceTrimmerTasksAssembly)" />

  <PropertyGroup>
    <CoreCompileDependsOn>$(CoreCompileDependsOn);CollectDeclaredReferences</CoreCompileDependsOn>
    <CollectDeclaredReferencesDependsOn>$(CollectDeclaredReferencesDependsOn);ResolveAssemblyReferences;PrepareProjectReferences</CollectDeclaredReferencesDependsOn>
  </PropertyGroup>
  <ItemGroup>
    <CompilerVisibleProperty Include="EnableReferenceTrimmerDiagnostics"/>
  </ItemGroup>

  <Target Name="CollectDeclaredReferences" DependsOnTargets="$(CollectDeclaredReferencesDependsOn)">
    <PropertyGroup Condition="'$(EnableReferenceTrimmer)' != 'false'">
      <_ReferenceTrimmerDeclaredReferencesFile>$(IntermediateOutputPath)\_ReferenceTrimmer_DeclaredReferences.tsv</_ReferenceTrimmerDeclaredReferencesFile>
      <_ReferenceTrimmerUsedReferencesFile>$(IntermediateOutputPath)\_ReferenceTrimmer_UsedReferences.log</_ReferenceTrimmerUsedReferencesFile>
      <_ReferenceTrimmerUnusedReferencesFile>$(IntermediateOutputPath)\_ReferenceTrimmer_UnusedReferences.log</_ReferenceTrimmerUnusedReferencesFile>
    </PropertyGroup>
    <ItemGroup Condition="'$(EnableReferenceTrimmer)' != 'false'">
      <!--
        Microsoft.NET.Build.Extensions may add many references to help bridge the gap with older
        versions of .NET Framework and .NET Standard. Avoid reporting these as unused.
      -->
      <_ReferenceTrimmerReferences Include="@(Reference)" />
      <_ReferenceTrimmerReferences Remove="@(_NETStandardLibraryNETFrameworkLib -> '%(FileName)')" />

      <_ReferenceTrimmerResolvedReferences Include="@(ReferencePathWithRefAssemblies)" Condition="'%(ReferencePathWithRefAssemblies.ReferenceSourceTarget)' == 'ResolveAssemblyReference'"/>

      <_ReferenceTrimmerProjectReferences Include="@(ReferencePathWithRefAssemblies)" Condition="'%(ReferencePathWithRefAssemblies.ReferenceSourceTarget)' == 'ProjectReference'" />
    </ItemGroup>

    <CollectDeclaredReferencesTask
      Condition="'$(EnableReferenceTrimmer)' != 'false'"
      OutputFile="$(_ReferenceTrimmerDeclaredReferencesFile)"
      MSBuildProjectFile="$(MSBuildProjectFile)"
      References="@(_ReferenceTrimmerReferences)"
      ResolvedReferences="@(_ReferenceTrimmerResolvedReferences)"
      ProjectReferences="@(_ReferenceTrimmerProjectReferences)"
      PackageReferences="@(PackageReference)"
      ProjectAssetsFile="$(ProjectAssetsFile)"
      TargetFrameworkMoniker="$(ReferringTargetFrameworkForProjectReferences)"
      TargetPlatformMoniker="$(TargetPlatformMoniker)"
      RuntimeIdentifier="$(RuntimeIdentifier)"
      NuGetRestoreTargets="$(NuGetRestoreTargets)"
      TargetFrameworkDirectories="$(TargetFrameworkDirectory)"
      NuGetPackageRoot="$(NuGetPackageRoot)" />

    <ItemGroup Condition="'$(EnableReferenceTrimmer)' != 'false'">
      <!-- https://github.com/dotnet/roslyn/blob/main/docs/analyzers/Using%20Additional%20Files.md#in-a-project-file -->
      <AdditionalFiles Include="$(_ReferenceTrimmerDeclaredReferencesFile)" />
      <FileWrites Include="$(_ReferenceTrimmerDeclaredReferencesFile)" />
      <FileWrites Include="$(_ReferenceTrimmerUsedReferencesFile)" Condition="'$(EnableReferenceTrimmerDiagnostics)'=='true'" />
      <FileWrites Include="$(_ReferenceTrimmerUnusedReferencesFile)" Condition="'$(EnableReferenceTrimmerDiagnostics)'=='true'" />
    </ItemGroup>
  </Target>
</Project>
